Aula 18.0 

	Interfaces e Classes Abstratas com Python
	
		Variáveis de classe e Variáveis de instância
		
			Atributos dp Objeto
			
				- Todos os objetos nascem com o mesmo número de atributos de classe e de instância.
				- Atributos de instância são diferentes apra cada objeto (cada objeto tem uma cópia).
				- Já os atributos de classe são compartilhados entre os objetos.
			
					Exemplo:
					
						class Estudante:
							escola = "DIO"
							
							def __init__(self, nome, numero):
								self.nome = nome
								self.numero = numero
								
							def __str__(self):
								return f"{self.nome} ({self.numero}) - {self.escola}"
								
							lu = Estudante("Lunardi", 59745)
							gi = Estudante("Giovanna", 74692)
							
		Métodos de Classe e Métodos Estáticos
		
			Métodos de Classe
			
				- Métodos de classe estão ligados à classe e não ao objeto.
				- Eles têm acesso ao estado da classe, pois recebem um parâmetro que aponta para a classe e não para a instância do objeto.
				
			Métodos Estáticos
			
				- Um método estático nnão recebe um primeiro argumento explícito.
				- Ele também é um método vinculado à classe e não ao objeto da classe.
				- Este método não pode acessar ou modificar o estado da classe.
				- Ele está presente em uma classe porque faz sentido que o método esteja presente na classe.
			
			Métodos de class x Métodos Estáticos
			
				- Um método recebe um primeiro parâmentro que aponta para a classe, enquanto um método estáticos não.
				- Um método de classe pode acessar ou modificar o estado da classe enquanto um método estático não pode acessá-lo ou modifica-lo.
				
			Quando utilizar método de classe ou método estático
			
				- Geralmente usamos o método de classe para criar métodos de fábrica.
				- Geralmente usamos o método estáticos para criar funções utilitárias.
				
		Interfaces
		
			- Interfaces definem o que uma classe deve fazer e não como fazer.
			- O conceito de interface é definir um contrato, onde são declarados os métodos ( o que deve ser feito) e suas respectivas assinaturas.
			- Em Python utilizamos classes abstratas para criar contratos.
			- Classes abstratas não podem ser instânciadas.
			
		Classes Abstratas
		
			ABC
			
				- Por padrão, o Python não fornece classes abstratas.
				- O Python vem com um módulo que fornece a base para definir as classes abstratas, e o nome do módulo é ABC.
				- O ABC funciona decorando métodos da classe base como abstratos e, em seguida, registrando classes concretas como implementações da base abstrata.
				- Um método se torna abstrato quando decorado com @abstractmethod
				
